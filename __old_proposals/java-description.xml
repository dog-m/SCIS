<logic>
  <grammar source="./../java.grm">
    <language name="java"/>
    
    <tree>
      <package type="package_declaration">
        <imports type="repeat import_declaration"/>
        <class type="class_declaration">
          <method type="method_declaration">
            <statement type="statement">
              <if type="if_statement"/>
              <for type="for_statement"/>
              <while type="while_statement"/>
              ...
            </statement>
          </method>
        </class>
      </package>
    </tree>
    
  </grammar>

  <extra-rules>
    <rule name="simplify" apply="after-all">
      <source>
        replace [block]
          '{'{ Statements [repeat declaration_or_statement] '}'}
        by
          '{ Statements '}
      </source>
    </rule>
    ...
  </extra-rules>
  
  <points>
    <point-of-interest
      id="package_name"
      type="package_declaration"
      value-of="package_header::package_name"
      keep-in="global"
      />

    <point-of-interest
      id="class_name"
      type="class_declaration"
      value-of="class_header::class_name"
      keep-in="global"
      />

    <point-of-interest
      id="method_name"
      type="method_declaration"
      value-of="method_name"
      keep-in="global"
      />
    ...
  </points>

  <pointcuts>
    <type id="imports">
      <pointcut>
        <replace>
          Imports <?base-type?>
        </replace>
        <by>
          Imports
          <?ref as-type="repeat import_declaration" join-op="append-each-unique"?>
        </by>
      </pointcut>
    </type>
  
    <type id="if">
      <pointcut name="before">
        <replace type="statement">
          IfStatement <?base-type?>
        </replace>
        <by>
          <?ref as-type="repeat statement" join-op="insert"?>
          IfStatement
        </by>
      </pointcut>
      ...
    </type>
    
    <type id="for">
      <pointcut id="before-body">
        ???
      </pointcut>

      <pointcut id="before" ref="if::before"/>
      ...
    </type>
  </pointcuts>
</logic>
