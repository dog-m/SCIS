<annotation>
    <grammar
      language="java"
      src="lang/java/grammar.txl"
      base-executable-sequence-type="repeat statement"
      >
        <keyword-DAG>
            <package type="package_declaration">
                <imports type="repeat import_declaration"/>
                <class type="class_declaration">
                    <body type="class_or_interface_body">
                        <method type="method_declaration">
                            <if type="if_statement">
                                <else type="else_clause"/>
                            </if>
                            <switch type="switch_statement">
                                <case type="switch_alternative"/>
                            </switch>
                            <for type="for_statement"/>
                            <while type="while_statement"/>
                            ...
                        </method>
                    </body>
                </class>
            </package>
        </keyword-DAG>
    </grammar>

    <lib>
        <rule
          name="simplify"
          apply="after-all"
          >
            <source>
                replace [block]
                  '{'{ Statements [repeat declaration_or_statement] '}'}
                by
                  '{ Statements '}
            </source>
        </rule>

        <function
          name="addToImportsIfNotExists"
          apply="call"
          params="Addition:import_declaration"
          >
            <source>
                replace [repeat import_declaration]
                  Imports [repeat import_declaration]

                deconstruct not * [import_declaration] Imports
                  Addition

                by
                  Imports [^ Addition]
            </source>
        </function>
    </lib>

    <points-of-interest>
        <point
          id="package_name"
          keyword="package"
          value-of="package_header:package_name"
          />

        <point
          id="class_name"
          keyword="class"
          value-of="class_header:class_name"
          />

        <point
          id="method_name"
          keyword="method"
          value-of="method_declarator:method_name"
          />
    </points-of-interest>

    <pointcuts>
        <keyword
          name="imports"
          >
            <replacement-patterns>
                <pattern search-type="repeat import_declaration">
                    __NODE__
                    <p name="all"/>
                </pattern>
            </replacement-patterns>
            <pointcuts>
                <pointcut name="all">
                    <fragment
                      type="repeat import_declaration"
                      as="Additions"
                      />
                    <paste-algorithm>
                        <fragment-to-variable
                          name="Additions"
                          type="repeat import_declaration"
                          />
                        <insert-call
                          function="addToImportsIfNotExists"
                          params="each Additions"
                          />
                    </paste-algorithm>
                </pointcut>
            </pointcuts>
        </keyword>

        <keyword
          name="body"
          >
            <replacement-patterns>
                <pattern search-type="class_or_interface_body">
                    {
                        <p name="all"/>
                        <!--repeat class_body_declaration-->
                    } <!--opt literal-->
                </pattern>
            </replacement-patterns>
            <pointcuts>
                <pointcut name="all">
                    <fragment
                      type="repeat class_body_declaration"
                      as="NewFields"
                      />
                    <paste-algorithm>
                        <insert-fragment
                          />
                    </paste-algorithm>
                </pointcut>
            </pointcuts>
        </keyword>

        <keyword
          name="method"
          >
            <replacement-patterns>
                <pattern search-type="method_declaration">
                    <!--repeat modifier--> <!--opt generic_parameter--> <!--type_specifier--> <!--method_declarator--> <!--opt throws-->
                    {
                        <p name="before_body"/>
                        <!--block-->
                        <p name="after_body"/>
                    }
                </pattern>
            </replacement-patterns>
            <pointcuts>
                <pointcut name="before_body">
                    <fragment
                      type="repeat statement"
                      as="Additions"
                      />
                    <paste-algorithm>
                        <deconstruct-variable
                          type="method_body"
                          variant="0"
                          />
                        <insert-fragment
                          />
                    </paste-algorithm>
                </pointcut>
            </pointcuts>
        </keyword>

        <!-- match-type already here in keyword when we described it in keyword-DAG -->
        <keyword
          name="if"
          >
            <replacement-patterns>
                <pattern search-type="if_statement">
                    if (true) {
                        <p name="before"/>
                        if ( <!--condition--> ) {
                            <p name="before_body"/>
                            <!--statement-->
                            <p name="after_body"/>
                        }
                        <!--opt else_clause-->
                        <p name="after"/>
                    }
                </pattern>
            </replacement-patterns>
            <pointcuts>
                <pointcut name="before">
                    <fragment
                      type="repeat statement"
                      as="Additions"
                      />
                    <paste-algorithm>
                        <insert-fragment
                          />
                    </paste-algorithm>
                </pointcut>
                <pointcut name="before_body" clone="if::before"/>
                <pointcut name="after_body" clone="if::before"/>
                <pointcut name="after" clone="if::before"/>
            </pointcuts>
        </keyword>
    </pointcuts>
</annotation>
