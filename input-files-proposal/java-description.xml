<logic>
  <grammar source="./../java.grm">
    <language name="java"/>
    <root type="program"/>
    
    <tree>
      <imports type="repeat import_declaration"/>
      <class type="class_declaration">
        
      </class>
    </tree>
    
  </grammar>

  <extra-rules>
    <rule name="simplify" apply="after-all">
      <source>
        replace [block]
          '{'{ Statements [repeat declaration_or_statement] '}'}
        by
          '{ Statements '}
      </source>
    </rule>
    ...
  </extra-rules>
  
  <points>
    <point-of-interest
      id="class_name"
      type="class_declaration"
      value-of="class_header::class_name"
      keep-in="global"
      />

    <point-of-interest
      id="method_name"
      type="method_declaration"
      value-of="method_name"
      keep-in="global"
      />
    ...
  </points>

  <pointcuts>
    <type id="if_statement">
      <pointcut name="before">
        <replace>
          IfStatement <?base-type?>
        </replace>
        <by>
          <?ref?>
          IfStatement
        </by>
      </pointcut>
      ...
    </type>
    
    <type id="for_statement">
      <pointcut id="before-body">
        ???
      </pointcut>

      <pointcut id="before" ref="if_statement::before"/>
      ...
    </type>
  </pointcuts>
</logic>
